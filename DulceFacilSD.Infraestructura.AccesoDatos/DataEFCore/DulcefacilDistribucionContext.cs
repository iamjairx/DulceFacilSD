// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace DulceFacilSD.Infraestructura.AccesoDatos;

public partial class DulcefacilDistribucionContext : DbContext
{
    public DulcefacilDistribucionContext()
    {
    }

    public DulcefacilDistribucionContext(DbContextOptions<DulcefacilDistribucionContext> options)
        : base(options)
    {
    }

    public virtual DbSet<CategoriasCliente> CategoriasCliente { get; set; }

    public virtual DbSet<CategoriasProducto> CategoriasProducto { get; set; }

    public virtual DbSet<Clientes> Clientes { get; set; }

    public virtual DbSet<DetallePedidos> DetallePedidos { get; set; }

    public virtual DbSet<Pedidos> Pedidos { get; set; }

    public virtual DbSet<Productos> Productos { get; set; }

    public virtual DbSet<PuntosVenta> PuntosVenta { get; set; }

    public virtual DbSet<Repartidores> Repartidores { get; set; }

    public virtual DbSet<Roles> Roles { get; set; }

    public virtual DbSet<RutasEntrega> RutasEntrega { get; set; }

    public virtual DbSet<Usuarios> Usuarios { get; set; }

    public virtual DbSet<ZonasGeograficas> ZonasGeograficas { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=JNOBOA-WIN11\\SA;Initial Catalog=DulcefacilDistribucion;User ID=SA;Password=NuevaContraseñaSegura123;Encrypt=False");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<CategoriasCliente>(entity =>
        {
            entity.HasKey(e => e.CategoriaID).HasName("PK__Categori__F353C1C502A51D08");

            entity.Property(e => e.Descripcion).HasMaxLength(200);
            entity.Property(e => e.DescuentoAplicable)
                .HasDefaultValue(0m)
                .HasColumnType("decimal(5, 2)");
            entity.Property(e => e.NombreCategoria)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<CategoriasProducto>(entity =>
        {
            entity.HasKey(e => e.CategoriaProductoID).HasName("PK__Categori__7C808EDC73E958AF");

            entity.Property(e => e.Descripcion).HasMaxLength(200);
            entity.Property(e => e.NombreCategoria)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Clientes>(entity =>
        {
            entity.HasKey(e => e.ClienteID).HasName("PK__Clientes__71ABD0A7E66CBEC7");

            entity.Property(e => e.Activo).HasDefaultValue(true);
            entity.Property(e => e.Direccion).HasMaxLength(200);
            entity.Property(e => e.Email).HasMaxLength(100);
            entity.Property(e => e.FechaRegistro)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.NombreCliente)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Telefono).HasMaxLength(20);

            entity.HasOne(d => d.Categoria).WithMany(p => p.Clientes)
                .HasForeignKey(d => d.CategoriaID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Clientes__Catego__33D4B598");
        });

        modelBuilder.Entity<DetallePedidos>(entity =>
        {
            entity.HasKey(e => e.DetalleID).HasName("PK__DetalleP__6E19D6FAE658109D");

            entity.Property(e => e.PrecioUnitario).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.Subtotal).HasColumnType("decimal(12, 2)");

            entity.HasOne(d => d.Pedido).WithMany(p => p.DetallePedidos)
                .HasForeignKey(d => d.PedidoID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__DetallePe__Pedid__5441852A");

            entity.HasOne(d => d.Producto).WithMany(p => p.DetallePedidos)
                .HasForeignKey(d => d.ProductoID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__DetallePe__Produ__5535A963");
        });

        modelBuilder.Entity<Pedidos>(entity =>
        {
            entity.HasKey(e => e.PedidoID).HasName("PK__Pedidos__09BA141045BC6D3A");

            entity.HasIndex(e => e.ClienteID, "IX_Pedidos_Cliente");

            entity.HasIndex(e => e.FechaPedido, "IX_Pedidos_Fecha");

            entity.Property(e => e.EstadoPedido)
                .HasMaxLength(20)
                .HasDefaultValue("Pendiente");
            entity.Property(e => e.FechaEntregaProgramada).HasColumnType("datetime");
            entity.Property(e => e.FechaPedido)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Observaciones).HasMaxLength(500);
            entity.Property(e => e.Total)
                .HasDefaultValue(0m)
                .HasColumnType("decimal(12, 2)");

            entity.HasOne(d => d.Cliente).WithMany(p => p.Pedidos)
                .HasForeignKey(d => d.ClienteID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Pedidos__Cliente__4F7CD00D");

            entity.HasOne(d => d.Ruta).WithMany(p => p.Pedidos)
                .HasForeignKey(d => d.RutaID)
                .HasConstraintName("FK__Pedidos__RutaID__5165187F");

            entity.HasOne(d => d.UsuarioVendedor).WithMany(p => p.Pedidos)
                .HasForeignKey(d => d.UsuarioVendedorID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Pedidos__Usuario__5070F446");
        });

        modelBuilder.Entity<Productos>(entity =>
        {
            entity.HasKey(e => e.ProductoID).HasName("PK__Producto__A430AE8306282624");

            entity.HasIndex(e => e.CategoriaProductoID, "IX_Productos_Categoria");

            entity.Property(e => e.Activo).HasDefaultValue(true);
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.NombreProducto)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.PrecioUnitario).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.Stock).HasDefaultValue(0);
            entity.Property(e => e.StockMinimo).HasDefaultValue(0);

            entity.HasOne(d => d.CategoriaProducto).WithMany(p => p.Productos)
                .HasForeignKey(d => d.CategoriaProductoID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Productos__Categ__3C69FB99");
        });

        modelBuilder.Entity<PuntosVenta>(entity =>
        {
            entity.HasKey(e => e.PuntoVentaID).HasName("PK__PuntosVe__2B166EED2B0A05BE");

            entity.Property(e => e.Activo).HasDefaultValue(true);
            entity.Property(e => e.Direccion)
                .IsRequired()
                .HasMaxLength(200);
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.NombrePunto)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Telefono).HasMaxLength(20);

            entity.HasOne(d => d.Zona).WithMany(p => p.PuntosVenta)
                .HasForeignKey(d => d.ZonaID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__PuntosVen__ZonaI__59FA5E80");
        });

        modelBuilder.Entity<Repartidores>(entity =>
        {
            entity.HasKey(e => e.RepartidorID).HasName("PK__Repartid__2BEB76E3B09E9B63");

            entity.HasIndex(e => e.ZonaAsignada, "IX_Repartidores_Zona");

            entity.HasIndex(e => e.Cedula, "UQ__Repartid__B4ADFE38D580801E").IsUnique();

            entity.Property(e => e.Activo).HasDefaultValue(true);
            entity.Property(e => e.Cedula)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.Email).HasMaxLength(100);
            entity.Property(e => e.FechaIngreso)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.LicenciaConducir).HasMaxLength(20);
            entity.Property(e => e.NombreCompleto)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Telefono).HasMaxLength(20);
            entity.Property(e => e.VehiculoAsignado).HasMaxLength(50);

            entity.HasOne(d => d.ZonaAsignadaNavigation).WithMany(p => p.Repartidores)
                .HasForeignKey(d => d.ZonaAsignada)
                .HasConstraintName("FK__Repartido__ZonaA__44FF419A");
        });

        modelBuilder.Entity<Roles>(entity =>
        {
            entity.HasKey(e => e.RolID).HasName("PK__Roles__F92302D153B51631");

            entity.HasIndex(e => e.NombreRol, "UQ__Roles__4F0B537F763F21D1").IsUnique();

            entity.Property(e => e.Descripcion).HasMaxLength(200);
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.NombreRol)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<RutasEntrega>(entity =>
        {
            entity.HasKey(e => e.RutaID).HasName("PK__RutasEnt__7B6199EEF36191DB");

            entity.HasIndex(e => e.RepartidorAsignado, "IX_RutasEntrega_Repartidor");

            entity.Property(e => e.Activa).HasDefaultValue(true);
            entity.Property(e => e.CapacidadMaxima).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.NombreRuta)
                .IsRequired()
                .HasMaxLength(50);

            entity.HasOne(d => d.RepartidorAsignadoNavigation).WithMany(p => p.RutasEntrega)
                .HasForeignKey(d => d.RepartidorAsignado)
                .HasConstraintName("FK__RutasEntr__Repar__49C3F6B7");

            entity.HasOne(d => d.Zona).WithMany(p => p.RutasEntrega)
                .HasForeignKey(d => d.ZonaID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__RutasEntr__ZonaI__48CFD27E");
        });

        modelBuilder.Entity<Usuarios>(entity =>
        {
            entity.HasKey(e => e.UsuarioID).HasName("PK__Usuarios__2B3DE798524164A0");

            entity.HasIndex(e => e.RolID, "IX_Usuarios_Rol");

            entity.HasIndex(e => e.NombreUsuario, "UQ__Usuarios__6B0F5AE087B952F4").IsUnique();

            entity.HasIndex(e => e.Email, "UQ__Usuarios__A9D10534F3DA65E0").IsUnique();

            entity.Property(e => e.Activo).HasDefaultValue(true);
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.NombreUsuario)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(255);

            entity.HasOne(d => d.Rol).WithMany(p => p.Usuarios)
                .HasForeignKey(d => d.RolID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Usuarios__RolID__2C3393D0");
        });

        modelBuilder.Entity<ZonasGeograficas>(entity =>
        {
            entity.HasKey(e => e.ZonaID).HasName("PK__ZonasGeo__1F1E05565BB9ABCB");

            entity.Property(e => e.Activa).HasDefaultValue(true);
            entity.Property(e => e.Descripcion).HasMaxLength(200);
            entity.Property(e => e.NombreZona)
                .IsRequired()
                .HasMaxLength(50);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}